name: Canisters Test Suite and Deployment

on:
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Run Canister Test Suite
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Cache install Nix packages
        uses: rikhuijzer/cache-install@v1.1.4
        with:
          key: nix-${{ hashFiles('default.nix') }}

      - name: Cache rust dependencies, build output, and DFX build cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
            .dfx/
          key: rust-test-${{ hashFiles('**/Cargo.lock') }}

      - name: Import DFX identity
        run: |
          touch actions_identity.pem
          echo "${{ secrets.FUEL_DAO_CANISTER_CONTROLLER_PRIVATE_KEY }}" > actions_identity.pem
          nix-shell --run "dfx identity import --disable-encryption actions actions_identity.pem"
          rm actions_identity.pem
      # - name: Import DFX identity
      #   run: |
      #     echo "${{ secrets.FUEL_DAO_CANISTER_CONTROLLER_PRIVATE_KEY }}" > actions_identity.pem
      #     nix-shell --run "dfx identity import --disable-encryption actions actions_identity.pem"
      #     rm actions_identity.pem

      - name: Check current DFX identity
        run: |
          nix-shell --run "dfx identity whoami"

      - name: Start Local Replica # Start local DFX replica
        run: nix-shell --run "dfx start --background"

      - name: Get identity list # Start local DFX replica
        run: nix-shell --run "dfx identity list"

      - name: Get identity principal # Start local DFX replica
        run: nix-shell --run "dfx identity get-principal"

      - name: check balance
        run: nix-shell --run "dfx cycles balance --network ic"
      # - name: Create Canister # Create the canister if it doesn't exist
      #   run: |
      #     nix-shell --run "dfx canister create leptos-hello --no-wallet || true"
      #
      - name: Deploy Canister to ICP # Deploy canister to the Internet Computer
        env:
          ICP_NETWORK: ic # Specify the network to deploy to (default is 'ic')
        run: |
          nix-shell --run "dfx deploy --network ic --with-cycles 1000000000000 --yes"

      - name: Stop Local Replica # Stop the local DFX replica
        run: nix-shell --run "dfx stop"

  # deploy:
  #   name: Deploy Canister # Deployment job
  #   runs-on: ubuntu-22.04
  #   needs: test # Depends on test job completion
  #
  #   steps:
  #     - name: Checkout Code # Check out repository code
  #       uses: actions/checkout@v3
  #
  #     - name: Deploy Canister to ICP # Deploy canister to the Internet Computer
  #       env:
  #         ICP_NETWORK: ic # Specify the network to deploy to (default is 'ic')
  #       run: |
  #         nix-shell --run "dfx deploy backend --network ic"
